import{showToast}from"./shared.js";const REQUIRED_FONTS=["ABCGintoNord-ExtraBold","ggsans-Bold","ggsans-BoldItalic","ggsans-ExtraBold","ggsans-ExtraBoldItalic","ggsans-Medium","ggsans-MediumItalic","ggsans-Normal","ggsans-NormalItalic","ggsans-Semibold","ggsans-SemiboldItalic","NotoSans-Bold","NotoSans-ExtraBold","NotoSans-Medium","NotoSans-Normal","NotoSans-NormalItalic","NotoSans-Semibold","ggmono-Normal"];function isValidHexColor(e){return/^#([0-9A-Fa-f]{6}|[0-9A-Fa-f]{8}|[0-9A-Fa-f]{3}|[0-9A-Fa-f]{4})$/.test(e)}function isValidRgbaColor(e,n=null,t=null){const o=e.match(/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(0|1|0?\.\d+|1\.0)\s*\)$/i);if(!o)return!1;const[,s,r,a,i]=o.map((e=>parseFloat(e))),l=s>=0&&s<=255&&r>=0&&r<=255&&a>=0&&a<=255&&i>=0&&i<=1;return!l&&n&&t&&t.push(`The value "${e}" for "${n}" contains invalid RGB values (must be between 0 and 255) or alpha value (must be between 0 and 1).`),l}function isValidColor(e){return"string"==typeof e&&(isValidHexColor(e)||isValidRgbaColor(e)||"transparent"===e)}function isValidFontUrl(e){return/^(https?:\/\/.*\.(ttf|otf)(\?.*)?)$/.test(e)}function isDiscordCdnUrl(e){return/^https?:\/\/(cdn\.discordapp\.com|discordapp\.com)/.test(e)}function validateRequired(e,n,t,o){return typeof e[n]===t&&("string"!==t||""!==e[n].trim())||(o.push(`"${n}" must be a non-empty ${t}.`),!1)}function validateObject(e,n,t){return!(!e[n]||"object"!=typeof e[n]||Array.isArray(e[n]))||(t.push(`"${n}" must be an object.`),!1)}function validateFonts(e,n,t=!1){const o=new Set;return REQUIRED_FONTS.forEach((s=>{if(e[s]){const t=e[s];o.add(t),isValidFontUrl(t)||n.push(`Invalid URL for font "${s}": "${t}".`),isDiscordCdnUrl(t)&&n.push(`Font "${s}" cannot use Discord CDN URL.`)}else{if("ggmono-Normal"===s&&e["SourceCodePro-Semibold"])return void t.push('"SourceCodePro-Semibold" has been replaced by "ggmono-Normal" in recent Discord versions. Consider updating your font pack.');n.push(`Missing required font: "${s}".`)}})),1===o.size&&Object.keys(e).length>1?n.push("All fonts cannot use the same URL. Different font styles must point to different files."):o.size<.5*Object.keys(e).length&&t.push("Most font styles use the same file, which can prevent visual differences and cause display inconsistencies. Use distinct files for each style."),o}function updateLineNumbers(e){const n=document.getElementById("lineNumbers");n.innerHTML="",e.forEach(((e,t)=>{const o=document.createElement("div");o.textContent=t+1,o.classList.add("line-number"),n.appendChild(o)}))}function highlightErrorLine(e){const n=document.getElementById("lineNumbers").children;n[e]&&n[e].classList.add("highlight")}function validateJSON(e,n){const t=[],o=[];let s="";const r=!!e.main,a=!!e.semanticColors||!!e.rawColors;return r||a?r&&a?(t.push("Invalid JSON: cannot contain both font pack and theme properties."),{errors:t,warnings:o,type:"unknown"}):(s=r?"fontpack":"theme",r?validateFontPack(e,t,o):validateTheme(e,t,o),{errors:t,warnings:o,type:s}):(t.push('Invalid JSON: must contain either "main" for font packs or "semanticColors"/"rawColors" for themes.'),{errors:t,warnings:o,type:"unknown"})}function validateFontPack(e,n,t){if(validateRequired(e,"name","string",n),validateRequired(e,"previewText","string",n),validateRequired(e,"spec","number",n),1!==e.spec&&n.push('"spec" must be equal to 1.'),!e.main||"object"!=typeof e.main)return void n.push('"main" must be an object containing font definitions.');validateFonts(e.main,n,t);return Object.keys(e.main).forEach((e=>{REQUIRED_FONTS.includes(e)||"SourceCodePro-Semibold"===e||t.push(`Unknown font "${e}" found in "main".`)})),{errors:n,warnings:t}}function validateTheme(e,n,t){if(validateRequired(e,"name","string",n),validateRequired(e,"description","string",n),e.semanticColors){if(!validateObject(e,"semanticColors",n))return;for(const t in e.semanticColors)Array.isArray(e.semanticColors[t])?e.semanticColors[t].forEach((e=>{isValidColor(e)?isValidRgbaColor(e,t,n):n.push(`The value "${e}" for "${t}" is not a valid color code.`)})):n.push(`The key "${t}" in "semanticColors" must be an array.`)}if(e.rawColors){if(!validateObject(e,"rawColors",n))return;for(const[t,o]of Object.entries(e.rawColors))Array.isArray(o)?n.push(`The value for "${t}" must be a string, not an array.`):isValidColor(o)?isValidRgbaColor(o,t,n):n.push(`The value "${o}" for "${t}" is not a valid color code.`)}if(Array.isArray(e.authors)?e.authors.forEach(((e,t)=>{"string"!=typeof e.name&&n.push(`The author at index ${t} must have a valid name.`)})):n.push('"authors" must be an array.'),void 0===e.spec?n.push('"spec" is missing.'):"number"==typeof e.spec&&2===e.spec||n.push('"spec" must be equal to 2.'),e.background){if(!validateObject(e,"background",n))return;if(e.background.url){const o=e.background.url;isDiscordCdnUrl(o)?n.push('"background" cannot be a Discord CDN URL.'):/\.(jpg|jpeg|png|gif)(\?.*)?$/i.test(o)||t.push(`The URL "${o}" may not be a valid image URL.`)}["blur","alpha"].forEach((t=>{void 0!==e.background[t]&&("number"!=typeof e.background[t]?n.push(`"${t}" in "background" must be a number.`):(e.background[t]<0||e.background[t]>1)&&n.push(`"${t}" in "background" must be between 0 and 1.`))}))}if(e.fonts){if(!validateObject(e,"fonts",n))return;validateFonts(e.fonts,n,t,!0)}if(e.plus&&(0!==e.plus.version&&n.push('"plus.version" must be 0.'),e.plus.customOverlays&&e.plus.iconpack&&t.push('"customOverlays" is incompatible with "iconpack".'),e.plus?.icons)){if(!validateObject(e.plus,"icons",n))return;for(const[t,o]of Object.entries(e.plus.icons))Array.isArray(o)?o.forEach((e=>{isValidHexColor(e)||n.push(`Each color in "${t}" must be a valid HEX color string.`)})):"string"!=typeof o||isValidHexColor(o)?"string"==typeof o||Array.isArray(o)||n.push(`The value of "${t}" in "plus.icons" must be a string or an array of strings.`):n.push(`The value of "${t}" must be a valid HEX color string.`);e.plus.mentionLineColor&&!isValidHexColor(e.plus.mentionLineColor)&&n.push('"mentionLineColor" must be a valid HEX color string.')}return{errors:n,warnings:t}}document.getElementById("validateButton").addEventListener("click",(function(){const e=document.getElementById("jsonInput").value,n=document.getElementById("result");n.innerHTML="";const t=e.split("\n");updateLineNumbers(t);try{const o=jsonlint.parse(e),{errors:s,warnings:r,type:a}=validateJSON(o,t);if(s.length>0)n.innerHTML='<p style="color: red;">Validation errors:</p><ul>',s.forEach((e=>{n.innerHTML+=`<li>${e}</li>`})),n.innerHTML+="</ul>";else{const e="fontpack"===a?"Valid font pack!":"Valid theme!";n.innerHTML=`<p class="success">${e}</p>`}r.length>0&&(n.innerHTML+='<p style="color: orange;">Validation warnings:</p><ul>',r.forEach((e=>{n.innerHTML+=`<li>${e}</li>`})),n.innerHTML+="</ul>"),n.scrollIntoView({behavior:"smooth"})}catch(e){const t=e.message.match(/line (\d+)/),o=t?parseInt(t[1]):"unknown",s=e.message||"Unknown syntax error";n.innerHTML=`<p class="error">Syntax error on line ${o}: ${s}</p>`,"unknown"!==o&&highlightErrorLine(o-1),n.scrollIntoView({behavior:"smooth"})}})),document.getElementById("jsonInput").addEventListener("scroll",(function(){document.getElementById("lineNumbers").scrollTop=this.scrollTop})),document.getElementById("formatButton").addEventListener("click",(function(){const e=document.getElementById("jsonInput").value;try{const n=JSON.parse(e),t=JSON.stringify(n,null,4);document.getElementById("jsonInput").value=t}catch(e){document.getElementById("result").innerHTML='<p style="color: red;">Syntax error in JSON, unable to format.</p>'}})),document.getElementById("copyButton").addEventListener("click",(async function(){const e=document.getElementById("jsonInput");try{await navigator.clipboard.writeText(e.value),showToast('<span class="material-symbols-rounded" style="color: #4CAF50;">check</span><span>Copied to clipboard!</span>')}catch(e){showToast('<span class="material-symbols-rounded" style="color: #fa4343;">error</span><span>Failed to copy</span>')}})),document.getElementById("clearButton").addEventListener("click",(function(){document.getElementById("jsonInput").value="",document.getElementById("result").innerHTML=""}));